const mongoose = require('mongoose');
const path = require('path');
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
const User = require(path.join(__dirname, '..', 'models', 'User'));
const Company = require(path.join(__dirname, '..', 'models', 'Company'));

const recreateTestUser = async () => {
  try {
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/procurement_db';
    
    console.log('\nüîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...');
    await mongoose.connect(mongoUri, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB\n');

    // –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const oldUser = await User.findOne({ email: 'admin@test-company.ru' });
    if (oldUser) {
      // –£–¥–∞–ª–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é
      if (oldUser.companyId) {
        await Company.findByIdAndDelete(oldUser.companyId);
        console.log('   ‚úì –°—Ç–∞—Ä–∞—è –∫–æ–º–ø–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∞');
      }
      await User.findByIdAndDelete(oldUser._id);
      console.log('   ‚úì –°—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
    } else {
      console.log('   ‚ÑπÔ∏è  –°—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8
    console.log('\nüè¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏...');
    const company = await Company.create({
      fullName: '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è"',
      inn: '1234567890',
      ogrn: '1234567890123',
      legalForm: '–û–û–û',
      industry: 'IT',
      companySize: '50-100',
      website: 'https://test-company.ru',
      description: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1',
      rating: 4.5,
      reviewsCount: 10,
      dealsCount: 25,
    });
    console.log('   ‚úì –ö–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞:', company.fullName);

    // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8
    console.log('\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const user = await User.create({
      email: 'admin@test-company.ru',
      password: 'SecurePass123!',
      firstName: '–ò–≤–∞–Ω',
      lastName: '–ò–≤–∞–Ω–æ–≤',
      position: '–î–∏—Ä–µ–∫—Ç–æ—Ä',
      phone: '+7 (999) 123-45-67',
      companyId: company._id,
    });
    console.log('   ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user.firstName, user.lastName);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö:');
    console.log('   Email:', user.email);
    console.log('   –ò–º—è:', user.firstName);
    console.log('   –§–∞–º–∏–ª–∏—è:', user.lastName);
    console.log('   –ö–æ–º–ø–∞–Ω–∏—è:', company.fullName);
    console.log('   –î–æ–ª–∂–Ω–æ—Å—Ç—å:', user.position);

    console.log('\n‚úÖ –ì–û–¢–û–í–û! –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8');
    console.log('\nüìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   Email:  admin@test-company.ru');
    console.log('   –ü–∞—Ä–æ–ª—å: SecurePass123!');
    console.log('');

    // –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ mock –∫–æ–º–ø–∞–Ω–∏–∏
    console.log('\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö mock –∫–æ–º–ø–∞–Ω–∏–π...');
    const updates = [
      { inn: '7707083894', updates: { companySize: '51-250', partnerGeography: ['moscow', 'russia_all'] } },
      { inn: '7707083895', updates: { companySize: '500+', partnerGeography: ['moscow', 'russia_all'] } },
      { inn: '7707083896', updates: { companySize: '11-50', partnerGeography: ['moscow', 'russia_all'] } },
      { inn: '7707083897', updates: { companySize: '51-250', partnerGeography: ['moscow', 'russia_all'] } },
      { inn: '7707083898', updates: { companySize: '251-500', partnerGeography: ['moscow', 'russia_all'] } },
    ];

    for (const item of updates) {
      await Company.updateOne({ inn: item.inn }, { $set: item.updates });
      console.log(`   ‚úì –ö–æ–º–ø–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: INN ${item.inn}`);
    }

    await mongoose.connection.close();
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error(error);
    process.exit(1);
  }
};

// –ó–∞–ø—É—Å–∫
recreateTestUser();

